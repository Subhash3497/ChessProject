{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red65\green182\blue69;\red178\green24\blue137;\red120\green109\blue196;
\red0\green160\blue190;\red131\green192\blue87;\red219\green44\blue56;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab674
\pard\tx674\pardeftab674\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \CocoaLigature0 //White Piece From Notation Parse\cf1 \
    \cf3 for\cf1  (i = \cf4 0\cf1 ; i < (\cf5 strlen\cf1 (token)-\cf4 2\cf1 ); i++)\
    \{\
        \cf3 if\cf1  (token[i] == \cf4 'x'\cf1 )\
            whiteMove->\cf6 isCapture\cf1  = \cf4 1\cf1 ;\
\
\
            \cf3 if\cf1  (token[i] == \cf4 'P'\cf1 )\
                whiteMove->\cf6 piece\cf1  = \cf4 'P'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'R'\cf1 )\
                whiteMove->\cf6 piece\cf1  = \cf4 'R'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'N'\cf1 )\
                whiteMove->\cf6 piece\cf1  = \cf4 'N'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'B'\cf1 )\
                whiteMove->\cf6 piece\cf1  = \cf4 'B'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'Q'\cf1 )\
                whiteMove->\cf6 piece\cf1  = \cf4 'Q'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'K'\cf1 )\
                whiteMove->\cf6 piece\cf1  = \cf4 'K'\cf1 ;\
            \cf3 else\cf1 \
                whiteMove->\cf6 piece\cf1  = \cf4 'P'\cf1 ;\
\
\
\
            whiteMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'x'\cf1 ;\
        \
            \cf3 if\cf1  (token[i] == \cf4 'a'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'a'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'b'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'b'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'c'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'c'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'd'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'd'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'e'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'e'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'f'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'f'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'g'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'g'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'h'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'h'\cf1 ;\
\
\
\
            \cf2 //whiteMove->from_loc.row = -1;\cf1 \
\
            \cf3 if\cf1  (token[i] == \cf4 '1'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 1\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '2'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 2\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '3'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 3\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '4'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 4\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '5'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 5\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '6'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 6\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '7'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 7\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '8'\cf1 )\
                whiteMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 8\cf1 ;\
\
\
    \}\
\
    \cf2 //to Location parse\cf1 \
\
    \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'a'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'a'\cf1 ;\
    \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'b'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'b'\cf1 ;\
    \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'c'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'c'\cf1 ;\
    \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'd'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'd'\cf1 ;\
    \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'e'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'e'\cf1 ;\
    \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'f'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'f'\cf1 ;\
    \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'g'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'g'\cf1 ;\
    \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'h'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'h'\cf1 ;\
\
    \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '1'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 1\cf1 ;\
    \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '2'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 2\cf1 ;\
    \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '3'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 3\cf1 ;\
    \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '4'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 4\cf1 ;\
    \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '5'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 5\cf1 ;\
    \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '6'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 6\cf1 ;\
    \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '7'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 7\cf1 ;\
    \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '8'\cf1 )\
        whiteMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 8\cf1 ;\
\
    \cf2 //Black Piece Token\cf1 \
    token = \cf5 strtok\cf1 ((\cf3 NULL\cf1 ),\cf7 " "\cf1 );\
\
\
    \cf3 if\cf1  ((\cf5 strlen\cf1 (token)-\cf4 2\cf1 ) != \cf4 0\cf1 )\
    \{\
        \cf3 for\cf1  (i = \cf4 0\cf1 ; i < \cf5 strlen\cf1 (token); i++)\
        \{\
            \cf3 if\cf1  (token[i] == \cf4 'P'\cf1 )\
                blackMove->\cf6 piece\cf1  = \cf4 'P'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'R'\cf1 )\
                blackMove->\cf6 piece\cf1  = \cf4 'R'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'N'\cf1 )\
                blackMove->\cf6 piece\cf1  = \cf4 'N'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'B'\cf1 )\
                blackMove->\cf6 piece\cf1  = \cf4 'B'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'Q'\cf1 )\
                blackMove->\cf6 piece\cf1  = \cf4 'Q'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'K'\cf1 )\
                blackMove->\cf6 piece\cf1  = \cf4 'K'\cf1 ;\
            \cf3 else\cf1 \
                blackMove->\cf6 piece\cf1  = \cf4 'P'\cf1 ;\
\
            \
            \
            \cf3 if\cf1  (token[i] == \cf4 'a'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'a'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'b'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'b'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'c'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'c'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'd'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'd'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'e'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'e'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'f'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'f'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'g'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'g'\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 'h'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 col\cf1  = \cf4 'h'\cf1 ;\
\
            \cf2 //blackMove->from_loc.col = 'x';\cf1 \
\
\
            \cf3 if\cf1  (token[i] == \cf4 '1'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 1\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '2'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 2\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '3'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 3\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '4'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 4\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '5'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 5\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '6'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 6\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '7'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 7\cf1 ;\
            \cf3 else\cf1  \cf3 if\cf1  (token[i] == \cf4 '8'\cf1 )\
                blackMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = \cf4 8\cf1 ;\
            \cf3 else\cf1 \
                blackMove->\cf6 from_loc\cf1 .\cf6 row\cf1  = -\cf4 1\cf1 ;\
\
\
            \cf3 if\cf1  (token[i] == \cf4 'x'\cf1 )\
                blackMove->\cf6 isCapture\cf1  = \cf4 1\cf1 ;\
\
        \}\
\
    \}\
    \
\
\
\
        \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'a'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'a'\cf1 ;\
        \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'b'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'b'\cf1 ;\
        \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'c'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'c'\cf1 ;\
        \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'd'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'd'\cf1 ;\
        \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'e'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'e'\cf1 ;\
        \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'f'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'f'\cf1 ;\
        \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'g'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'g'\cf1 ;\
        \cf3 else\cf1  \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 2\cf1 ] == \cf4 'h'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 col\cf1  = \cf4 'h'\cf1 ;\
\
        \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '1'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 1\cf1 ;\
        \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '2'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 2\cf1 ;\
        \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '3'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 3\cf1 ;\
        \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '4'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 4\cf1 ;\
        \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '5'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 5\cf1 ;\
        \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '6'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 6\cf1 ;\
        \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '7'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 7\cf1 ;\
        \cf3 if\cf1  (token[\cf5 strlen\cf1 (token) - \cf4 1\cf1 ] == \cf4 '8'\cf1 )\
            blackMove->\cf6 to_loc\cf1 .\cf6 row\cf1  = \cf4 8\cf1 ;\
\
}